/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 13 18:01:27 GMT 2015
 */

package com.pearson.eidetic.utilities;

import org.junit.Test;
import static org.junit.Assert.*;
import com.pearson.eidetic.utilities.PropertiesConfigurationWrapper;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.InputStream;
import java.io.PushbackInputStream;
import org.apache.commons.configuration.PropertiesConfiguration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class PropertiesConfigurationWrapper_ESTest extends PropertiesConfigurationWrapper_ESTest_scaffolding {

  @Test
  public void test00()  throws Throwable  {
      PropertiesConfigurationWrapper propertiesConfigurationWrapper0 = new PropertiesConfigurationWrapper("\\");
      PropertiesConfiguration propertiesConfiguration0 = propertiesConfigurationWrapper0.getPropertiesConfiguration();
      assertNull(propertiesConfiguration0);
  }

  @Test
  public void test01()  throws Throwable  {
      MockFile mockFile0 = new MockFile("}", "}");
      PropertiesConfigurationWrapper propertiesConfigurationWrapper0 = new PropertiesConfigurationWrapper((File) mockFile0);
      InputStream inputStream0 = propertiesConfigurationWrapper0.getConfigurationInputStream();
      assertNull(inputStream0);
  }

  @Test
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PropertiesConfigurationWrapper propertiesConfigurationWrapper0 = new PropertiesConfigurationWrapper((InputStream) byteArrayInputStream0);
      propertiesConfigurationWrapper0.savePropertiesConfigurationFile((String) null, ".");
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(propertiesConfigurationWrapper0.isValid());
  }

  @Test
  public void test03()  throws Throwable  {
      String string0 = PropertiesConfigurationWrapper.savePropertiesConfigurationToString((PropertiesConfiguration) null);
      assertNull(string0);
  }

  @Test
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PropertiesConfigurationWrapper propertiesConfigurationWrapper0 = new PropertiesConfigurationWrapper((InputStream) byteArrayInputStream0);
      PropertiesConfiguration propertiesConfiguration0 = propertiesConfigurationWrapper0.getPropertiesConfiguration();
      PropertiesConfigurationWrapper.savePropertiesConfigurationToString(propertiesConfiguration0);
      assertEquals(0, byteArrayInputStream0.available());
      assertFalse(propertiesConfiguration0.isAutoSave());
  }

  @Test
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("}", "}");
      PropertiesConfigurationWrapper propertiesConfigurationWrapper0 = new PropertiesConfigurationWrapper((File) mockFile0);
      String string0 = propertiesConfigurationWrapper0.savePropertiesConfigurationToString();
      assertNull(string0);
  }

  @Test
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (int) (byte) (-1), (int) (byte)0);
      PropertiesConfigurationWrapper propertiesConfigurationWrapper0 = new PropertiesConfigurationWrapper((InputStream) byteArrayInputStream0);
      String string0 = propertiesConfigurationWrapper0.savePropertiesConfigurationToString();
      assertNotNull(string0);
      assertTrue(propertiesConfigurationWrapper0.isValid());
  }

  @Test
  public void test07()  throws Throwable  {
      PropertiesConfigurationWrapper.savePropertiesConfigurationFile("/Users/uwalkj6/Documents/NetBeansProjects/eidetic/}/}", (String) null, (PropertiesConfiguration) null);
  }

  @Test
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PropertiesConfigurationWrapper propertiesConfigurationWrapper0 = new PropertiesConfigurationWrapper((InputStream) byteArrayInputStream0);
      PropertiesConfiguration propertiesConfiguration0 = propertiesConfigurationWrapper0.getPropertiesConfiguration();
      PropertiesConfigurationWrapper.savePropertiesConfigurationFile("", "#5K.N1", propertiesConfiguration0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(propertiesConfiguration0.isDelimiterParsingDisabled());
  }

  @Test
  public void test09()  throws Throwable  {
      PropertiesConfigurationWrapper propertiesConfigurationWrapper0 = new PropertiesConfigurationWrapper("\u0000\n");
      propertiesConfigurationWrapper0.savePropertiesConfigurationFile("#5K.N1", "#5K.N1");
      assertFalse(propertiesConfigurationWrapper0.isValid());
  }

  @Test
  public void test10()  throws Throwable  {
      MockFile mockFile0 = new MockFile("}", "}");
      PropertiesConfigurationWrapper.savePropertiesConfigurationFile((File) mockFile0, (PropertiesConfiguration) null);
      assertEquals(0L, mockFile0.getUsableSpace());
  }

//  @Test
//  public void test11()  throws Throwable  {
//      byte[] byteArray0 = new byte[2];
//      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
//      PropertiesConfigurationWrapper propertiesConfigurationWrapper0 = new PropertiesConfigurationWrapper((InputStream) byteArrayInputStream0);
//      MockFile mockFile0 = new MockFile("' doesn't map to a BigInteger object", "com.pearson.eidetic.utilities.PropertiesConfigurationWrapper");
//      propertiesConfigurationWrapper0.savePropertiesConfigurationFile((File) mockFile0);
//      assertEquals(3L, mockFile0.length());
//      assertTrue(propertiesConfigurationWrapper0.isValid());
//  }

  @Test
  public void test12()  throws Throwable  {
      PropertiesConfigurationWrapper propertiesConfigurationWrapper0 = new PropertiesConfigurationWrapper((String) null);
      assertNull(propertiesConfigurationWrapper0.getConfigurationDirectory());
  }

  @Test
  public void test13()  throws Throwable  {
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 1006);
      PropertiesConfigurationWrapper propertiesConfigurationWrapper0 = new PropertiesConfigurationWrapper((InputStream) pushbackInputStream0);
      assertNull(propertiesConfigurationWrapper0.getConfigurationFilename());
  }

  @Test
  public void test14()  throws Throwable  {
      PropertiesConfigurationWrapper propertiesConfigurationWrapper0 = new PropertiesConfigurationWrapper((InputStream) null);
      assertNull(propertiesConfigurationWrapper0.getConfigurationDirectory());
  }

  @Test
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile("}", "}");
      mockFile0.createNewFile();
      PropertiesConfigurationWrapper propertiesConfigurationWrapper0 = new PropertiesConfigurationWrapper((File) mockFile0);
      assertNull(propertiesConfigurationWrapper0.getConfigurationFilename());
  }

  @Test
  public void test16()  throws Throwable  {
      PropertiesConfigurationWrapper propertiesConfigurationWrapper0 = new PropertiesConfigurationWrapper((File) null);
      assertFalse(propertiesConfigurationWrapper0.isValid());
  }

  @Test
  public void test17()  throws Throwable  {
      MockFile mockFile0 = new MockFile("}", "}");
      PropertiesConfigurationWrapper propertiesConfigurationWrapper0 = new PropertiesConfigurationWrapper((File) mockFile0);
      boolean boolean0 = propertiesConfigurationWrapper0.isValid();
      assertFalse(boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PropertiesConfigurationWrapper propertiesConfigurationWrapper0 = new PropertiesConfigurationWrapper((InputStream) byteArrayInputStream0);
      boolean boolean0 = propertiesConfigurationWrapper0.isValid();
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PropertiesConfigurationWrapper propertiesConfigurationWrapper0 = new PropertiesConfigurationWrapper((InputStream) byteArrayInputStream0);
      PropertiesConfiguration propertiesConfiguration0 = propertiesConfigurationWrapper0.getPropertiesConfiguration();
      MockFile mockFile0 = new MockFile("' doesn't map to a BigInteger object", "com.pearson.eidetic.utilities.PropertiesConfigurationWrapper");
      PropertiesConfigurationWrapper.savePropertiesConfigurationFile((File) mockFile0, propertiesConfiguration0);
      PropertiesConfigurationWrapper propertiesConfigurationWrapper1 = new PropertiesConfigurationWrapper("' doesn't map to a BigInteger object");
      assertNull(propertiesConfigurationWrapper1.getConfigurationDirectory());
  }

  @Test
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PropertiesConfigurationWrapper propertiesConfigurationWrapper0 = new PropertiesConfigurationWrapper((InputStream) byteArrayInputStream0);
      propertiesConfigurationWrapper0.getConfigurationInputStream();
      assertEquals(0, byteArrayInputStream0.available());
  }

  @Test
  public void test21()  throws Throwable  {
      PropertiesConfigurationWrapper propertiesConfigurationWrapper0 = new PropertiesConfigurationWrapper("\u0000\n");
      MockFile mockFile0 = new MockFile("' doesn't map to a BigInteger object", "com.pearson.eidetic.utilities.PropertiesConfigurationWrapper");
      propertiesConfigurationWrapper0.savePropertiesConfigurationFile((File) mockFile0);
      assertFalse(mockFile0.canWrite());
  }

  @Test
  public void test22()  throws Throwable  {
      MockFile mockFile0 = new MockFile("}", "}");
      PropertiesConfigurationWrapper propertiesConfigurationWrapper0 = new PropertiesConfigurationWrapper((File) mockFile0);
      String string0 = propertiesConfigurationWrapper0.getConfigurationDirectory();
      assertNull(string0);
  }
}
