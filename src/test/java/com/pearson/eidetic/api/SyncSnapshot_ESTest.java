/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 04 21:00:44 GMT 2016
 */

package com.pearson.eidetic.api;

import org.junit.Test;
import static org.junit.Assert.*;
import com.pearson.eidetic.api.SyncSnapshot;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletRequestWrapper;
import javax.servlet.http.HttpServletResponse;
import org.eclipse.jetty.server.HttpChannel;
import org.eclipse.jetty.server.HttpInput;
import org.eclipse.jetty.server.HttpOutput;
import org.eclipse.jetty.server.Request;
import org.eclipse.jetty.server.Response;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SyncSnapshot_ESTest extends SyncSnapshot_ESTest_scaffolding {

  @Test
  public void test0()  throws Throwable  {
      SyncSnapshot syncSnapshot0 = new SyncSnapshot();
      Request request0 = new Request((HttpChannel) null, (HttpInput) null);
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper((HttpServletRequest) request0);
      Response response0 = new Response((HttpChannel) null, (HttpOutput) null);
      response0.include();
      syncSnapshot0.processPostRequest(httpServletRequestWrapper0, response0);
      assertEquals((-1L), response0.getLongContentLength());
  }

  @Test
  public void test1()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf((String) null);
      Request request0 = new Request((HttpChannel) null, (HttpInput) null);
      String string0 = SyncSnapshot.syncSansphots(request0, (String) null, (boolean) boolean0, (boolean) boolean0);
      assertNotNull(string0);
      assertEquals("Error: accountid not found in request for syncsnapshot api call.", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      SyncSnapshot syncSnapshot0 = new SyncSnapshot();
      Request request0 = new Request((HttpChannel) null, (HttpInput) null);
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper((HttpServletRequest) request0);
      syncSnapshot0.processPostRequest(httpServletRequestWrapper0, (HttpServletResponse) null);
      assertEquals("SyncSnapshot API", syncSnapshot0.getServletInfo());
  }

  @Test
  public void test3()  throws Throwable  {
      SyncSnapshot syncSnapshot0 = new SyncSnapshot();
      Request request0 = new Request((HttpChannel) null, (HttpInput) null);
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper((HttpServletRequest) request0);
      Response response0 = new Response((HttpChannel) null, (HttpOutput) null);
      syncSnapshot0.processPostRequest(httpServletRequestWrapper0, response0);
      assertEquals(200, response0.getStatus());
  }

  @Test
  public void test4()  throws Throwable  {
      SyncSnapshot syncSnapshot0 = new SyncSnapshot();
      Request request0 = new Request((HttpChannel) null, (HttpInput) null);
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper((HttpServletRequest) request0);
      syncSnapshot0.processGetRequest(httpServletRequestWrapper0, (HttpServletResponse) null);
      assertEquals("SyncSnapshot API", syncSnapshot0.getServletInfo());
  }

  @Test
  public void test5()  throws Throwable  {
      SyncSnapshot syncSnapshot0 = new SyncSnapshot();
      syncSnapshot0.doGet((HttpServletRequest) null, (HttpServletResponse) null);
      assertEquals("SyncSnapshot API", syncSnapshot0.getServletInfo());
  }

  @Test
  public void test6()  throws Throwable  {
      SyncSnapshot syncSnapshot0 = new SyncSnapshot();
      syncSnapshot0.doPost((HttpServletRequest) null, (HttpServletResponse) null);
      assertEquals("SyncSnapshot API", syncSnapshot0.getServletInfo());
  }

  @Test
  public void test7()  throws Throwable  {
      SyncSnapshot syncSnapshot0 = new SyncSnapshot();
      String string0 = syncSnapshot0.getServletInfo();
      assertEquals("SyncSnapshot API", string0);
  }

  @Test
  public void test8()  throws Throwable  {
      SyncSnapshot syncSnapshot0 = new SyncSnapshot();
      Request request0 = new Request((HttpChannel) null, (HttpInput) null);
      Response response0 = new Response((HttpChannel) null, (HttpOutput) null);
      syncSnapshot0.doGet(request0, response0);
      assertNull(response0.getContentType());
  }
}
