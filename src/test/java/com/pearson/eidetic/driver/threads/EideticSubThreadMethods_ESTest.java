/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 04 21:27:48 GMT 2016
 */

package com.pearson.eidetic.driver.threads;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.amazonaws.ClientConfiguration;
import com.amazonaws.auth.AWSCredentials;
import com.amazonaws.auth.AWSCredentialsProvider;
import com.amazonaws.auth.AnonymousAWSCredentials;
import com.amazonaws.auth.BasicAWSCredentials;
import com.amazonaws.auth.ClasspathPropertiesFileCredentialsProvider;
import com.amazonaws.auth.EnvironmentVariableCredentialsProvider;
import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;
import com.amazonaws.services.ec2.AmazonEC2Client;
import com.amazonaws.services.ec2.model.CreateTagsRequest;
import com.amazonaws.services.ec2.model.DeleteTagsRequest;
import com.amazonaws.services.ec2.model.DescribeVpcClassicLinkRequest;
import com.amazonaws.services.ec2.model.DeviceType;
import com.amazonaws.services.ec2.model.IamInstanceProfile;
import com.amazonaws.services.ec2.model.Instance;
import com.amazonaws.services.ec2.model.InstanceBlockDeviceMapping;
import com.amazonaws.services.ec2.model.InstanceType;
import com.amazonaws.services.ec2.model.ProductCode;
import com.amazonaws.services.ec2.model.Snapshot;
import com.amazonaws.services.ec2.model.SnapshotState;
import com.amazonaws.services.ec2.model.Tag;
import com.amazonaws.services.ec2.model.VirtualizationType;
import com.amazonaws.services.ec2.model.Volume;
import com.amazonaws.services.ec2.model.VolumeAttachment;
import com.amazonaws.services.elasticloadbalancing.model.RemoveTagsRequest;
import com.amazonaws.services.rds.model.ModifyEventSubscriptionRequest;
import com.amazonaws.services.redshift.model.DescribeHsmClientCertificatesRequest;
import com.amazonaws.services.s3.model.ListMultipartUploadsRequest;
import com.pearson.eidetic.driver.threads.EideticSubThreadMethods;
import com.pearson.eidetic.globals.ApplicationConfiguration;
import java.time.Instant;
import java.util.Collection;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.joda.time.PeriodType;
import org.joda.time.format.ISOPeriodFormat;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class EideticSubThreadMethods_ESTest extends EideticSubThreadMethods_ESTest_scaffolding {

  @Test
  public void test00()  throws Throwable  {
      PeriodType.hours();
      EideticSubThreadMethods.range(1933, 1933);
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      LinkedList<Snapshot> linkedList0 = new LinkedList<Snapshot>();
      Snapshot snapshot0 = new Snapshot();
      Snapshot snapshot1 = snapshot0.withKmsKeyId("TagsToDelete: ");
      Snapshot snapshot2 = snapshot1.withEncrypted((Boolean) null);
      Snapshot snapshot3 = snapshot2.withProgress("com.pearson.eidetic.driver.threads.EideticSubThreadMethods");
      Tag[] tagArray0 = new Tag[2];
      Tag tag0 = new Tag((String) null, (String) null);
      tagArray0[0] = tag0;
      Tag tag1 = tag0.withKey("CV9M,q)B_");
      tagArray0[1] = tag1;
      Snapshot snapshot4 = snapshot3.withTags(tagArray0);
      linkedList0.add(snapshot4);
      linkedList0.add(snapshot3);
      // Undeclared exception!
      try { 
        eideticSubThreadMethods0.sortSnapshotsByDate(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.pearson.eidetic.driver.threads.EideticSubThreadMethods$1", e);
      }
  }

  @Test
  public void test01()  throws Throwable  {
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      Snapshot snapshot0 = new Snapshot();
      MockDate mockDate0 = new MockDate(1, (-34), 1);
      Snapshot snapshot1 = snapshot0.withStartTime(mockDate0);
      Snapshot snapshot2 = snapshot1.clone();
      Snapshot snapshot3 = snapshot2.withState("No suitable Log implementation");
      snapshot1.setProgress("com.pearson.eidetic.driver.threads.EideticSubThreadMethods");
      eideticSubThreadMethods0.getDaysBetweenNowAndSnapshot(snapshot1);
      MockDate mockDate1 = new MockDate((-37), 28, (-2302));
      mockDate0.after(mockDate1);
      SnapshotState snapshotState0 = SnapshotState.Completed;
      Snapshot snapshot4 = snapshot3.withState(snapshotState0);
      snapshot4.setOwnerAlias("No suitable Log implementation");
      CreateTagsRequest createTagsRequest0 = new CreateTagsRequest();
      Tag[] tagArray0 = new Tag[9];
      Tag tag0 = new Tag("com.pearson.eidetic.driver.threads.EideticSubThreadMethods", "com.pearson.eidetic.driver.threads.EideticSubThreadMethods");
      Tag tag1 = tag0.withValue("");
      tagArray0[0] = tag1;
      Tag tag2 = new Tag();
      tagArray0[1] = tag2;
      Tag tag3 = new Tag("8EG1[!1y;lsjymLW", "kg]8.'RG{,");
      tagArray0[2] = tag3;
      Tag tag4 = new Tag("8EG1[!1y;lsjymLW");
      tagArray0[3] = tag4;
      Tag tag5 = new Tag("com.pearson.eidetic.driver.threads.EideticSubThreadMethods", "UZ&5RQR=~v");
      tagArray0[4] = tag5;
      Tag tag6 = new Tag("", "#|mS9S'Pb2Wy5Kqjl");
      tagArray0[5] = tag6;
      Tag tag7 = tag0.withKey((String) null);
      tagArray0[6] = tag7;
      Tag tag8 = tag6.withValue("xYG;");
      tagArray0[7] = tag8;
      Tag tag9 = tag1.withKey("");
      tagArray0[8] = tag9;
      CreateTagsRequest createTagsRequest1 = createTagsRequest0.withTags(tagArray0);
      DescribeHsmClientCertificatesRequest describeHsmClientCertificatesRequest0 = new DescribeHsmClientCertificatesRequest();
      List<String> list0 = describeHsmClientCertificatesRequest0.getTagKeys();
      CreateTagsRequest createTagsRequest2 = createTagsRequest1.withResources((Collection<String>) list0);
      Instance instance0 = new Instance();
      List<Tag> list1 = instance0.getTags();
      CreateTagsRequest createTagsRequest3 = createTagsRequest2.withTags((Collection<Tag>) list1);
      List<Tag> list2 = createTagsRequest3.getTags();
      snapshot4.withTags((Collection<Tag>) list2);
      eideticSubThreadMethods0.getResourceTags(snapshot4);
  }

  @Test
  public void test02()  throws Throwable  {
      EideticSubThreadMethods.range(12, (-2529));
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      Snapshot snapshot0 = new Snapshot();
      List<Tag> list0 = snapshot0.getTags();
      Snapshot snapshot1 = snapshot0.withTags((Collection<Tag>) list0);
      Snapshot snapshot2 = snapshot1.withOwnerId("volume-id");
      Snapshot snapshot3 = snapshot2.withDescription("&Zk>");
      MockDate mockDate0 = new MockDate();
      Snapshot snapshot4 = snapshot3.withStartTime(mockDate0);
      eideticSubThreadMethods0.getResourceTags(snapshot4);
      // Undeclared exception!
      try { 
        eideticSubThreadMethods0.getResourceTags((Instance) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.pearson.eidetic.driver.threads.EideticSubThreadMethods", e);
      }
  }

  @Test
  public void test03()  throws Throwable  {
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      Snapshot snapshot0 = new Snapshot();
      Snapshot snapshot1 = snapshot0.withState("");
      Snapshot snapshot2 = snapshot1.clone();
      MockDate mockDate0 = new MockDate(0, 0, 21);
      Snapshot snapshot3 = snapshot2.withStartTime(mockDate0);
      Tag[] tagArray0 = new Tag[3];
      Tag tag0 = new Tag();
      Tag tag1 = tag0.clone();
      tagArray0[0] = tag1;
      Tag tag2 = tag1.clone();
      tagArray0[1] = tag2;
      Tag tag3 = tag2.withValue("");
      tagArray0[2] = tag3;
      Snapshot snapshot4 = snapshot3.withTags(tagArray0);
      eideticSubThreadMethods0.getMinutesBetweenNowAndSnapshot(snapshot4);
      AmazonEC2Client amazonEC2Client0 = new AmazonEC2Client((AWSCredentials) null);
      Instance instance0 = new Instance();
      Instance instance1 = instance0.withInstanceLifecycle("'c`\"M&QOF");
      Instance instance2 = instance1.withClientToken("");
      Collection<Tag> collection0 = eideticSubThreadMethods0.getResourceTags(instance2);
      Integer integer0 = new Integer((-23));
      Integer integer1 = new Integer(676);
      // Undeclared exception!
      try { 
        eideticSubThreadMethods0.setResourceTags(amazonEC2Client0, (Volume) null, collection0, integer0, integer1, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.pearson.eidetic.driver.threads.EideticSubThreadMethods", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      Instance instance0 = new Instance();
      Instance instance1 = instance0.withVirtualizationType("^ID|y4");
      DeviceType deviceType0 = DeviceType.InstanceStore;
      Instance instance2 = instance1.withRootDeviceType(deviceType0);
      Instance instance3 = instance2.withIamInstanceProfile((IamInstanceProfile) null);
      LinkedList<ProductCode> linkedList0 = new LinkedList<ProductCode>();
      Instance instance4 = instance3.withProductCodes((Collection<ProductCode>) linkedList0);
      instance4.setPrivateDnsName("gEN1");
      eideticSubThreadMethods0.getResourceTags(instance4);
      Snapshot snapshot0 = new Snapshot();
      MockDate mockDate0 = new MockDate(18, 18, 18);
      Instant instant0 = mockDate0.toInstant();
      Date date0 = Date.from(instant0);
      Snapshot snapshot1 = snapshot0.withStartTime(date0);
      Snapshot snapshot2 = snapshot1.withOwnerAlias("SuggesterNames: ");
      Snapshot snapshot3 = snapshot2.withKmsKeyId("X?i^x%9r$%f");
      Boolean boolean0 = new Boolean(true);
      Snapshot snapshot4 = snapshot3.withEncrypted(boolean0);
      eideticSubThreadMethods0.getMinutesBetweenNowAndSnapshot(snapshot4);
  }

  @Test
  public void test05()  throws Throwable  {
      ISOPeriodFormat.standard();
      EideticSubThreadMethods.range(230, 688);
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      Snapshot snapshot0 = new Snapshot();
      Snapshot snapshot1 = snapshot0.clone();
      MockDate mockDate0 = new MockDate(230, 2383, 2383, 2383, 2383, 1440);
      Snapshot snapshot2 = snapshot1.withStartTime(mockDate0);
      Integer integer0 = new Integer(230);
      Snapshot snapshot3 = snapshot2.withVolumeSize(integer0);
      Snapshot snapshot4 = snapshot3.withVolumeId("com.amazonaws.services.ec2.model.AcceptVpcPeeringConnectionRequest");
      eideticSubThreadMethods0.getDaysBetweenNowAndSnapshot(snapshot4);
      LinkedList<Snapshot> linkedList0 = new LinkedList<Snapshot>();
      eideticSubThreadMethods0.getHoursBetweenNowAndNewestSnapshot(linkedList0);
  }

  @Test
  public void test07()  throws Throwable  {
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      Volume volume0 = new Volume();
      Volume volume1 = volume0.withState("L_#");
      Instance instance0 = new Instance();
      Snapshot snapshot0 = new Snapshot();
      Collection<Tag> collection0 = eideticSubThreadMethods0.getResourceTags(snapshot0);
      Instance instance1 = instance0.withTags(collection0);
      Instance instance2 = instance1.withInstanceId("L_#");
      Collection<Tag> collection1 = eideticSubThreadMethods0.getResourceTags(instance2);
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      eideticSubThreadMethods0.setResourceTags((AmazonEC2Client) null, volume1, collection1, integer0, integer1, "");
      PeriodType.days();
  }

  @Test
  public void test08()  throws Throwable  {
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      Snapshot snapshot0 = new Snapshot();
      LinkedList<Tag> linkedList0 = new LinkedList<Tag>();
      Snapshot snapshot1 = snapshot0.withTags((Collection<Tag>) linkedList0);
      Snapshot snapshot2 = snapshot1.withDescription("j");
      SnapshotState snapshotState0 = SnapshotState.Completed;
      Tag tag0 = new Tag("");
      Tag tag1 = tag0.withValue("O$?)<pr_a2LC&f");
      Tag tag2 = tag1.clone();
      linkedList0.add(tag2);
      snapshot2.setState(snapshotState0);
      eideticSubThreadMethods0.getDaysBetweenNowAndSnapshot(snapshot2);
      AmazonEC2Client amazonEC2Client0 = new AmazonEC2Client();
      Integer integer0 = new Integer(0);
      Integer.remainderUnsigned(0, (-1747));
      Integer integer1 = new Integer(929);
      eideticSubThreadMethods0.setResourceTags(amazonEC2Client0, snapshot2, (Collection<Tag>) linkedList0, integer0, integer1, "j");
      PeriodType.days();
      // Undeclared exception!
      try { 
        eideticSubThreadMethods0.getResourceTags((Volume) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.pearson.eidetic.driver.threads.EideticSubThreadMethods", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      ISOPeriodFormat.standard();
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      STSAssumeRoleSessionCredentialsProvider sTSAssumeRoleSessionCredentialsProvider0 = new STSAssumeRoleSessionCredentialsProvider("{D|x(6>%&7UE%?", "com.amazonaws.services.cloudtrail.model.StartLoggingRequest");
      AmazonEC2Client amazonEC2Client0 = new AmazonEC2Client((AWSCredentialsProvider) sTSAssumeRoleSessionCredentialsProvider0);
      Integer integer0 = Integer.valueOf(372);
      Integer integer1 = new Integer((-1));
      // Undeclared exception!
      try { 
        eideticSubThreadMethods0.deleteSnapshot(amazonEC2Client0, (Snapshot) null, integer0, integer1, "MaxJobs: ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.pearson.eidetic.driver.threads.EideticSubThreadMethods", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      EideticSubThreadMethods.range(0, 0);
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      EnvironmentVariableCredentialsProvider environmentVariableCredentialsProvider0 = new EnvironmentVariableCredentialsProvider();
      AmazonEC2Client amazonEC2Client0 = new AmazonEC2Client((AWSCredentialsProvider) environmentVariableCredentialsProvider0);
      Integer integer0 = new Integer(0);
      List<Snapshot> list0 = eideticSubThreadMethods0.getAllSnapshotsOfVolume(amazonEC2Client0, (Volume) null, integer0, integer0, "");
      eideticSubThreadMethods0.getDaysBetweenNowAndNewestSnapshot(list0);
  }

  @Test
  public void test11()  throws Throwable  {
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      // Undeclared exception!
      try { 
        eideticSubThreadMethods0.getResourceTags((Snapshot) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.pearson.eidetic.driver.threads.EideticSubThreadMethods", e);
      }
  }

  @Test
  public void test12()  throws Throwable  {
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      AmazonEC2Client amazonEC2Client0 = new AmazonEC2Client();
      Instance instance0 = new Instance();
      DeviceType deviceType0 = DeviceType.InstanceStore;
      Instance instance1 = instance0.withRootDeviceType(deviceType0);
      Instance instance2 = instance1.withSpotInstanceRequestId("");
      Instance instance3 = instance2.withClientToken("");
      InstanceType instanceType0 = InstanceType.C1Medium;
      Instance instance4 = instance3.withInstanceType(instanceType0);
      ListMultipartUploadsRequest listMultipartUploadsRequest0 = new ListMultipartUploadsRequest("");
      listMultipartUploadsRequest0.getMaxUploads();
      instance3.withPublicDnsName("");
      Integer.toUnsignedString((-924));
      Integer integer0 = new Integer((-924));
      // Undeclared exception!
      try { 
        eideticSubThreadMethods0.setResourceTags(amazonEC2Client0, instance4, (Collection<Tag>) null, (Integer) null, integer0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.pearson.eidetic.aws.EC2ClientMethods", e);
      }
  }

  @Test
  public void test13()  throws Throwable  {
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      Snapshot snapshot0 = new Snapshot();
      Integer integer0 = new Integer(0);
      Snapshot snapshot1 = snapshot0.withVolumeSize(integer0);
      Snapshot snapshot2 = snapshot1.withSnapshotId(")}^&evk9eseNA!B1Sl~");
      ApplicationConfiguration.getEideticExpress();
      Snapshot snapshot3 = snapshot2.withEncrypted((Boolean) null);
      Snapshot snapshot4 = snapshot3.withProgress(")}^&evk9eseNA!B1Sl~");
      Integer.getInteger(")}^&evk9eseNA!B1Sl~");
      eideticSubThreadMethods0.getDaysBetweenNowAndSnapshot(snapshot4);
      LinkedList<Snapshot> linkedList0 = new LinkedList<Snapshot>();
      linkedList0.add(snapshot3);
      linkedList0.push(snapshot2);
      eideticSubThreadMethods0.getHoursBetweenNowAndNewestSnapshot(linkedList0);
      ClasspathPropertiesFileCredentialsProvider classpathPropertiesFileCredentialsProvider0 = new ClasspathPropertiesFileCredentialsProvider();
      AmazonEC2Client amazonEC2Client0 = null;
      try {
        amazonEC2Client0 = new AmazonEC2Client((AWSCredentialsProvider) classpathPropertiesFileCredentialsProvider0, (ClientConfiguration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.amazonaws.http.HttpClientFactory", e);
      }
  }

  @Test
  public void test15()  throws Throwable  {
      PeriodType.days();
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      Snapshot snapshot0 = new Snapshot();
      Snapshot snapshot1 = snapshot0.withVolumeId("hi+dCJLf+,n([R!.");
      Snapshot snapshot2 = snapshot1.withState("hi+dCJLf+,n([R!.");
      snapshot2.setDescription("hi+dCJLf+,n([R!.");
      Snapshot snapshot3 = snapshot2.clone();
      Snapshot snapshot4 = snapshot3.withOwnerId("hi+dCJLf+,n([R!.");
      eideticSubThreadMethods0.getMinutesBetweenNowAndSnapshot(snapshot4);
      Integer integer0 = new Integer((-229));
      Integer integer1 = Integer.valueOf(3183);
      eideticSubThreadMethods0.deleteSnapshot((AmazonEC2Client) null, snapshot0, integer0, integer1, "*.[Y6gD& ");
      Volume volume0 = new Volume();
      Volume volume1 = volume0.withIops(integer0);
      MockDate mockDate0 = new MockDate((-229), 265, 3183, (-229), 1, (-229));
      Instant instant0 = mockDate0.toInstant();
      Date date0 = Date.from(instant0);
      volume1.withCreateTime(date0);
      try { 
        Integer.decode("hi+dCJLf+,n([R!.");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"hi+dCJLf+,n([R!.\"
         //
         assertThrownBy("java.lang.NumberFormatException", e);
      }
  }

  @Test
  public void test16()  throws Throwable  {
      ISOPeriodFormat.standard();
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      DescribeVpcClassicLinkRequest describeVpcClassicLinkRequest0 = new DescribeVpcClassicLinkRequest();
      List<String> list0 = describeVpcClassicLinkRequest0.getVpcIds();
      DeleteTagsRequest deleteTagsRequest0 = new DeleteTagsRequest(list0);
      List<Tag> list1 = deleteTagsRequest0.getTags();
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(0);
      // Undeclared exception!
      try { 
        eideticSubThreadMethods0.setResourceTags((AmazonEC2Client) null, (Snapshot) null, (Collection<Tag>) list1, integer0, integer1, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.pearson.eidetic.driver.threads.EideticSubThreadMethods", e);
      }
  }

  @Test
  public void test17()  throws Throwable  {
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      eideticSubThreadMethods0.getHoursBetweenNowAndNewestSnapshot((List<Snapshot>) null);
      AnonymousAWSCredentials anonymousAWSCredentials0 = new AnonymousAWSCredentials();
      AmazonEC2Client amazonEC2Client0 = null;
      try {
        amazonEC2Client0 = new AmazonEC2Client((AWSCredentials) anonymousAWSCredentials0, (ClientConfiguration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.amazonaws.http.HttpClientFactory", e);
      }
  }

  @Test
  public void test18()  throws Throwable  {
      PeriodType.hours();
      EideticSubThreadMethods.range(0, 0);
  }

  @Test
  public void test19()  throws Throwable  {
      PeriodType.minutes();
      PeriodType.minutes();
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      Instance instance0 = new Instance();
      Instance instance1 = instance0.withInstanceId((String) null);
      Instance instance2 = instance1.withVpcId("com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetSecurityGroupsRequest");
      Instance instance3 = instance2.withKernelId("self");
      VirtualizationType virtualizationType0 = VirtualizationType.Paravirtual;
      Instance instance4 = instance3.withVirtualizationType(virtualizationType0);
      eideticSubThreadMethods0.getResourceTags(instance4);
      EideticSubThreadMethods.range(1, 1);
      // Undeclared exception!
      try { 
        eideticSubThreadMethods0.getMinutesBetweenNowAndSnapshot((Snapshot) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.pearson.eidetic.driver.threads.EideticSubThreadMethods", e);
      }
  }

  @Test
  public void test21()  throws Throwable  {
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      EideticSubThreadMethods eideticSubThreadMethods1 = new EideticSubThreadMethods();
      Snapshot snapshot0 = new Snapshot();
      eideticSubThreadMethods0.getDaysBetweenNowAndSnapshot(snapshot0);
  }

  @Test
  public void test22()  throws Throwable  {
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      Snapshot snapshot0 = new Snapshot();
      Snapshot snapshot1 = snapshot0.withVolumeId("<ebaT4+");
      Integer integer0 = new Integer(0);
      Snapshot snapshot2 = snapshot1.withVolumeSize(integer0);
      Snapshot snapshot3 = snapshot2.clone();
      Snapshot snapshot4 = snapshot3.withSnapshotId("<ebaT4+");
      eideticSubThreadMethods0.getMinutesBetweenNowAndSnapshot(snapshot4);
  }

  @Test
  public void test24()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "volume-id");
      // Undeclared exception!
      try { 
        EideticSubThreadMethods.range(630, 326565);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 10000
         //
         assertThrownBy("org.evosuite.runtime.LoopCounter", e);
      }
  }

  @Test
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        EideticSubThreadMethods.range(3290, 2241);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.pearson.eidetic.driver.threads.EideticSubThreadMethods", e);
      }
  }

  @Test
  public void test27()  throws Throwable  {
      EideticSubThreadMethods.range((-1231), (-1231));
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      AmazonEC2Client amazonEC2Client0 = null;
      try {
        amazonEC2Client0 = new AmazonEC2Client((ClientConfiguration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.amazonaws.http.HttpClientFactory", e);
      }
  }

  @Test
  public void test29()  throws Throwable  {
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      LinkedList<Snapshot> linkedList0 = new LinkedList<Snapshot>();
      Snapshot snapshot0 = new Snapshot();
      MockDate mockDate0 = new MockDate((-2663), (-2663), (-1743));
      Snapshot snapshot1 = snapshot0.withStartTime(mockDate0);
      EideticSubThreadMethods eideticSubThreadMethods1 = new EideticSubThreadMethods();
      Volume volume0 = new Volume();
      Collection<Tag> collection0 = eideticSubThreadMethods1.getResourceTags(volume0);
      Snapshot snapshot2 = snapshot1.withTags(collection0);
      Tag[] tagArray0 = new Tag[9];
      Tag tag0 = new Tag((String) null, (String) null);
      tagArray0[0] = tag0;
      Tag tag1 = new Tag("", "");
      tagArray0[1] = tag1;
      Tag tag2 = tag1.clone();
      tagArray0[2] = tag2;
      Tag tag3 = tag1.clone();
      tagArray0[3] = tag3;
      Tag tag4 = new Tag("Bx%Gl1HG", "!8");
      tagArray0[4] = tag4;
      Tag tag5 = new Tag((String) null);
      tagArray0[5] = tag5;
      Tag tag6 = new Tag("Bx%Gl1HG", (String) null);
      tagArray0[6] = tag6;
      Tag tag7 = tag6.withKey("");
      tagArray0[7] = tag7;
      Tag tag8 = new Tag();
      tagArray0[8] = tag8;
      Snapshot snapshot3 = snapshot2.withTags(tagArray0);
      Snapshot snapshot4 = snapshot3.withSnapshotId("com.fasterxml.jackson.databind.ext.DOMDeserializer$DocumentDeserializer");
      linkedList0.add(snapshot4);
      eideticSubThreadMethods0.getHoursBetweenNowAndNewestSnapshot(linkedList0);
  }

  @Test
  public void test30()  throws Throwable  {
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      Snapshot snapshot0 = new Snapshot();
      ClasspathPropertiesFileCredentialsProvider classpathPropertiesFileCredentialsProvider0 = new ClasspathPropertiesFileCredentialsProvider();
      classpathPropertiesFileCredentialsProvider0.toString();
      classpathPropertiesFileCredentialsProvider0.toString();
      // Undeclared exception!
      try { 
        classpathPropertiesFileCredentialsProvider0.getCredentials();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to load AWS credentials from the /AwsCredentials.properties file on the classpath
         //
         assertThrownBy("com.amazonaws.auth.ClasspathPropertiesFileCredentialsProvider", e);
      }
  }

  @Test
  public void test32()  throws Throwable  {
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      Snapshot snapshot0 = new Snapshot();
      MockDate mockDate0 = new MockDate((-1548), 0, (-1548));
      Snapshot snapshot1 = snapshot0.withStartTime(mockDate0);
      Snapshot snapshot2 = snapshot1.withDescription("");
      Snapshot snapshot3 = snapshot2.withSnapshotId("");
      ApplicationConfiguration.getVolumeSynchronizer();
      Snapshot snapshot4 = snapshot3.withEncrypted((Boolean) null);
      int int0 = eideticSubThreadMethods0.dateCompare(snapshot4, snapshot1);
      assertEquals(0, int0);
      
      PeriodType.hours();
      LinkedList<Snapshot> linkedList0 = new LinkedList<Snapshot>();
      int int1 = eideticSubThreadMethods0.getHoursBetweenNowAndNewestSnapshot(linkedList0);
      assertEquals((-1), int1);
  }


  @Test
  public void test34()  throws Throwable  {
      PeriodType.hours();
      EideticSubThreadMethods.range(1933, 1933);
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      LinkedList<Snapshot> linkedList0 = new LinkedList<Snapshot>();
      Snapshot snapshot0 = new Snapshot();
      Snapshot snapshot1 = snapshot0.withKmsKeyId("TagsToDelete: ");
      Snapshot snapshot2 = snapshot1.withEncrypted((Boolean) null);
      Snapshot snapshot3 = snapshot2.withProgress("com.pearson.eidetic.driver.threads.EideticSubThreadMethods");
      Tag[] tagArray0 = new Tag[2];
      Tag tag0 = new Tag((String) null, (String) null);
      tagArray0[0] = tag0;
      Tag tag1 = new Tag("CV9M,q)B_", "CV9M,q)B_");
      tagArray0[1] = tag1;
      Snapshot snapshot4 = snapshot3.withTags(tagArray0);
      linkedList0.add(snapshot4);
      eideticSubThreadMethods0.sortSnapshotsByDate(linkedList0);
      eideticSubThreadMethods0.sortSnapshotsByDate((List<Snapshot>) null);
      // Undeclared exception!
      try { 
        eideticSubThreadMethods0.isFinished();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not supported yet.
         //
         assertThrownBy("com.pearson.eidetic.driver.threads.EideticSubThreadMethods", e);
      }
  }

  @Test
  public void test35()  throws Throwable  {
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      AmazonEC2Client amazonEC2Client0 = new AmazonEC2Client();
      Snapshot snapshot0 = new Snapshot();
      ApplicationConfiguration.getVolumeSynchronizer();
      Snapshot snapshot1 = snapshot0.withEncrypted((Boolean) null);
      Tag[] tagArray0 = new Tag[8];
      Tag tag0 = new Tag("9_HxDR\"U\"#iNIc3", "9_HxDR\"U\"#iNIc3");
      tagArray0[0] = tag0;
      Tag tag1 = new Tag("DisplayId: ", "tl43.FcD/rZdvG,/");
      tagArray0[1] = tag1;
      Tag tag2 = tag1.withKey("u=$mwRN");
      tagArray0[2] = tag2;
      Tag tag3 = tag2.withKey("ata:BZ0`u");
      tagArray0[3] = tag3;
      Tag tag4 = new Tag();
      tagArray0[4] = tag4;
      Tag tag5 = tag4.withKey("9_HxDR\"U\"#iNIc3");
      tagArray0[5] = tag5;
      Tag tag6 = new Tag("com.amazonaws.services.opsworks.model.RegisterRdsDbInstanceRequest");
      tagArray0[6] = tag6;
      Tag tag7 = tag1.withKey("");
      tagArray0[7] = tag7;
      Snapshot snapshot2 = snapshot1.withTags(tagArray0);
      Snapshot snapshot3 = snapshot2.withKmsKeyId("ata:BZ0`u");
      Snapshot snapshot4 = snapshot3.withDescription(" `!DYml|jZ234");
      Collection<Tag> collection0 = eideticSubThreadMethods0.getResourceTags(snapshot3);
      Integer integer0 = new Integer((-1573));
      Integer integer1 = new Integer((-1573));
      eideticSubThreadMethods0.setResourceTags(amazonEC2Client0, snapshot4, collection0, integer0, integer1, "");
      assertNull(snapshot4.getState());
  }

  @Test
  public void test36()  throws Throwable  {
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      Snapshot snapshot0 = new Snapshot();
      ModifyEventSubscriptionRequest modifyEventSubscriptionRequest0 = new ModifyEventSubscriptionRequest();
      List<String> list0 = modifyEventSubscriptionRequest0.getEventCategories();
      LinkedList<Tag> linkedList0 = new LinkedList<Tag>();
      CreateTagsRequest createTagsRequest0 = new CreateTagsRequest(list0, (List<Tag>) linkedList0);
      RemoveTagsRequest removeTagsRequest0 = new RemoveTagsRequest();
      List<String> list1 = removeTagsRequest0.getLoadBalancerNames();
      CreateTagsRequest createTagsRequest1 = createTagsRequest0.withResources((Collection<String>) list1);
      List<Tag> list2 = createTagsRequest1.getTags();
      snapshot0.withTags((Collection<Tag>) list2);
      snapshot0.withOwnerAlias("r-2");
      LinkedList<Snapshot> linkedList1 = new LinkedList<Snapshot>();
      int int0 = eideticSubThreadMethods0.getDaysBetweenNowAndNewestSnapshot(linkedList1);
      assertEquals((-1), int0);
  }

  @Test
  public void test37()  throws Throwable  {
      EideticSubThreadMethods eideticSubThreadMethods0 = new EideticSubThreadMethods();
      Volume volume0 = new Volume();
      List<Tag> list0 = volume0.getTags();
      Volume volume1 = volume0.withEncrypted((Boolean) null);
      Integer integer0 = new Integer(1382);
      List<Snapshot> list1 = eideticSubThreadMethods0.getAllSnapshotsOfVolume((AmazonEC2Client) null, volume1, integer0, integer0, "NXvlzzU=l[a");
      eideticSubThreadMethods0.getDaysBetweenNowAndNewestSnapshot(list1);
      Integer.getInteger("The provider doesn't have any available ids", (-1));
      Integer integer1 = new Integer((-2220));
      // Undeclared exception!
      try { 
        eideticSubThreadMethods0.setResourceTags((AmazonEC2Client) null, (Instance) null, (Collection<Tag>) list0, integer1, integer1, "volume-id");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.pearson.eidetic.driver.threads.EideticSubThreadMethods", e);
      }
  }
}
