/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 28 16:57:13 GMT 2017
 */

package com.pearson.eidetic.driver.threads.subthreads;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.amazonaws.regions.Region;
import com.amazonaws.services.ec2.AmazonEC2Client;
import com.amazonaws.services.ec2.model.Volume;
import com.pearson.eidetic.driver.threads.subthreads.SnapshotVolumeSyncValidator;
import java.util.ArrayList;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.json.simple.JSONObject;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SnapshotVolumeSyncValidator_ESTest extends SnapshotVolumeSyncValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer((-466));
      SnapshotVolumeSyncValidator snapshotVolumeSyncValidator0 = new SnapshotVolumeSyncValidator(".fgPd'h)w=+r:X+6/", ".fgPd'h)w=+r:X+6/", ".fgPd'h)w=+r:X+6/", integer0, integer0, (Region) null, (ArrayList<Volume>) null);
      // Undeclared exception!
      try { 
        snapshotVolumeSyncValidator0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pearson.eidetic.driver.threads.subthreads.SnapshotVolumeSyncValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      SnapshotVolumeSyncValidator snapshotVolumeSyncValidator0 = new SnapshotVolumeSyncValidator("R", "R", "R", integer0, integer0, (Region) null, (ArrayList<Volume>) null);
      boolean boolean0 = snapshotVolumeSyncValidator0.snapshotDeletion((AmazonEC2Client) null, (Volume) null, integer0);
      assertFalse(boolean0);
      assertFalse(snapshotVolumeSyncValidator0.isFinished());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer(0);
      SnapshotVolumeSyncValidator snapshotVolumeSyncValidator0 = new SnapshotVolumeSyncValidator("", "", "", integer0, (Integer) null, (Region) null, (ArrayList<Volume>) null);
      boolean boolean0 = snapshotVolumeSyncValidator0.snapshotDeletion((AmazonEC2Client) null, (Volume) null, (Integer) null);
      assertFalse(boolean0);
      assertFalse(snapshotVolumeSyncValidator0.isFinished());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      SnapshotVolumeSyncValidator snapshotVolumeSyncValidator0 = new SnapshotVolumeSyncValidator("R", "R", "R", integer0, integer0, (Region) null, (ArrayList<Volume>) null);
      boolean boolean0 = snapshotVolumeSyncValidator0.snapshotCreation((AmazonEC2Client) null, (Volume) null, (Date) null);
      assertFalse(boolean0);
      assertFalse(snapshotVolumeSyncValidator0.isFinished());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      SnapshotVolumeSyncValidator snapshotVolumeSyncValidator0 = new SnapshotVolumeSyncValidator("R", "R", "R", integer0, integer0, (Region) null, (ArrayList<Volume>) null);
      boolean boolean0 = snapshotVolumeSyncValidator0.snapshotDecision((AmazonEC2Client) null, (Volume) null, integer0);
      assertFalse(snapshotVolumeSyncValidator0.isFinished());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Integer integer0 = new Integer((-466));
      SnapshotVolumeSyncValidator snapshotVolumeSyncValidator0 = new SnapshotVolumeSyncValidator(".fgPd'h)w=+r:X+6/", ".fgPd'h)w=+r:X+6/", ".fgPd'h)w=+r:X+6/", integer0, integer0, (Region) null, (ArrayList<Volume>) null);
      snapshotVolumeSyncValidator0.getKeep((JSONObject) null, (Volume) null);
      assertFalse(snapshotVolumeSyncValidator0.isFinished());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Integer integer0 = new Integer(3578);
      SnapshotVolumeSyncValidator snapshotVolumeSyncValidator0 = new SnapshotVolumeSyncValidator(")", ")", ")", integer0, integer0, (Region) null, (ArrayList<Volume>) null);
      snapshotVolumeSyncValidator0.getIntTagValue((Volume) null);
      assertFalse(snapshotVolumeSyncValidator0.isFinished());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      SnapshotVolumeSyncValidator snapshotVolumeSyncValidator0 = new SnapshotVolumeSyncValidator("R", "R", "R", integer0, integer0, (Region) null, (ArrayList<Volume>) null);
      boolean boolean0 = snapshotVolumeSyncValidator0.isFinished();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SnapshotVolumeSyncValidator snapshotVolumeSyncValidator0 = new SnapshotVolumeSyncValidator("", "", (String) null, (Integer) null, (Integer) null, (Region) null, (ArrayList<Volume>) null);
      // Undeclared exception!
      try { 
        snapshotVolumeSyncValidator0.connect((Region) null, (String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pearson.eidetic.driver.threads.subthreads.SnapshotVolumeSyncValidator", e);
      }
  }
}
