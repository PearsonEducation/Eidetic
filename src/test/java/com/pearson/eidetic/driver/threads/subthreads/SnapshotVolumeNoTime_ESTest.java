/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 04 20:56:17 GMT 2016
 */

package com.pearson.eidetic.driver.threads.subthreads;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.amazonaws.regions.Region;
import com.amazonaws.services.ec2.AmazonEC2Client;
import com.amazonaws.services.ec2.model.Volume;
import com.pearson.eidetic.driver.threads.subthreads.SnapshotVolumeNoTime;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.json.simple.JSONObject;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SnapshotVolumeNoTime_ESTest extends SnapshotVolumeNoTime_ESTest_scaffolding {

  @Test
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      Volume volume0 = new Volume();
      SnapshotVolumeNoTime snapshotVolumeNoTime0 = new SnapshotVolumeNoTime("avwZdJ!h", "avwZdJ!h", "avwZdJ!h", integer0, integer0, (Region) null, arrayList0);
      snapshotVolumeNoTime0.getKeep((JSONObject) null, volume0);
      assertFalse(snapshotVolumeNoTime0.isFinished());
  }

  @Test
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      SnapshotVolumeNoTime snapshotVolumeNoTime0 = new SnapshotVolumeNoTime("avwZdJ!h", "avwZdJ!h", "avwZdJ!h", integer0, integer0, (Region) null, arrayList0);
      // Undeclared exception!
      try { 
        snapshotVolumeNoTime0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.pearson.eidetic.driver.threads.subthreads.SnapshotVolumeNoTime", e);
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Integer integer0 = Integer.valueOf((-225));
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      SnapshotVolumeNoTime snapshotVolumeNoTime0 = new SnapshotVolumeNoTime("#U};lU>k", ":!Q3ho_~qIs1e~mq^", ":!Q3ho_~qIs1e~mq^", integer0, integer0, (Region) null, arrayList0);
      // Undeclared exception!
      try { 
        snapshotVolumeNoTime0.connect((Region) null, "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.pearson.eidetic.driver.threads.subthreads.SnapshotVolumeNoTime", e);
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer(162);
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      SnapshotVolumeNoTime snapshotVolumeNoTime0 = new SnapshotVolumeNoTime("", "&k0mK#,32<\"", "&k0mK#,32<\"", (Integer) null, integer0, (Region) null, arrayList0);
      Volume volume0 = new Volume();
      boolean boolean0 = snapshotVolumeNoTime0.snapshotDeletion((AmazonEC2Client) null, volume0, "3}{Y(", integer0);
      assertFalse(boolean0);
      assertFalse(snapshotVolumeNoTime0.isFinished());
  }

  @Test
  public void test4()  throws Throwable  {
      Integer integer0 = new Integer(162);
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      SnapshotVolumeNoTime snapshotVolumeNoTime0 = new SnapshotVolumeNoTime("", "&k0mK#,32<\"", "&k0mK#,32<\"", (Integer) null, integer0, (Region) null, arrayList0);
      Volume volume0 = new Volume();
      MockDate mockDate0 = new MockDate(162, 154, 162, 162, 60);
      boolean boolean0 = snapshotVolumeNoTime0.snapshotCreation((AmazonEC2Client) null, volume0, "3}{Y(", mockDate0);
      assertFalse(snapshotVolumeNoTime0.isFinished());
      assertFalse(boolean0);
  }

  @Test
  public void test5()  throws Throwable  {
      Integer integer0 = new Integer(0);
      SnapshotVolumeNoTime snapshotVolumeNoTime0 = new SnapshotVolumeNoTime("", "", "", integer0, integer0, (Region) null, (ArrayList<Volume>) null);
      JSONObject jSONObject0 = new JSONObject();
      Volume volume0 = new Volume();
      snapshotVolumeNoTime0.getPeriod(jSONObject0, volume0);
      assertFalse(snapshotVolumeNoTime0.isFinished());
  }
}
