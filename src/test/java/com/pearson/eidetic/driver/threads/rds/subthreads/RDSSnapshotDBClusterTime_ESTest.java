/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 28 16:56:21 GMT 2017
 */

package com.pearson.eidetic.driver.threads.rds.subthreads;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.amazonaws.regions.Region;
import com.amazonaws.regions.Regions;
import com.amazonaws.services.rds.AmazonRDSClient;
import com.amazonaws.services.rds.model.DBCluster;
import com.pearson.eidetic.driver.threads.rds.subthreads.RDSSnapshotDBClusterTime;
import com.pearson.eidetic.globals.ApplicationConfiguration;
import java.util.ArrayList;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.json.simple.JSONObject;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RDSSnapshotDBClusterTime_ESTest extends RDSSnapshotDBClusterTime_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer(3482);
      Regions regions0 = Regions.AP_NORTHEAST_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<DBCluster> arrayList0 = new ArrayList<DBCluster>();
      RDSSnapshotDBClusterTime rDSSnapshotDBClusterTime0 = new RDSSnapshotDBClusterTime("r@.WMPHLV\"", "r@.WMPHLV\"", "Ipi{IQ0QF<", "r@.WMPHLV\"", integer0, integer0, region0, arrayList0);
      JSONObject jSONObject0 = new JSONObject();
      DBCluster dBCluster0 = new DBCluster();
      rDSSnapshotDBClusterTime0.getPeriod(jSONObject0, dBCluster0);
      assertFalse(rDSSnapshotDBClusterTime0.isFinished());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer(1451);
      ArrayList<DBCluster> arrayList0 = new ArrayList<DBCluster>();
      RDSSnapshotDBClusterTime rDSSnapshotDBClusterTime0 = new RDSSnapshotDBClusterTime("Wa=$", "N]2hTW", "Wa=$", "r^CnFzje?s9BcAMHq&", integer0, integer0, (Region) null, arrayList0);
      // Undeclared exception!
      try { 
        rDSSnapshotDBClusterTime0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pearson.eidetic.driver.threads.rds.subthreads.RDSSnapshotDBClusterTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Regions regions0 = Regions.SA_EAST_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<DBCluster> arrayList0 = new ArrayList<DBCluster>();
      RDSSnapshotDBClusterTime rDSSnapshotDBClusterTime0 = new RDSSnapshotDBClusterTime("Jfqp}?}ql&w~", "Jfqp}?}ql&w~", "L]*U", "vwy^K\"~vX|[P", (Integer) null, (Integer) null, region0, arrayList0);
      // Undeclared exception!
      try { 
        rDSSnapshotDBClusterTime0.run();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.amazonaws.ClientConfiguration
         //
         verifyException("com.pearson.eidetic.driver.threads.rds.subthreads.RDSSnapshotDBClusterTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrayList<DBCluster> arrayList0 = new ArrayList<DBCluster>();
      RDSSnapshotDBClusterTime rDSSnapshotDBClusterTime0 = new RDSSnapshotDBClusterTime("s6ir`V7#", "s6ir`V7#", "s6ir`V7#", "s6ir`V7#", (Integer) null, (Integer) null, (Region) null, arrayList0);
      // Undeclared exception!
      try { 
        rDSSnapshotDBClusterTime0.connect((Region) null, "com.amazonaws.services.glacier.model.SetVaultNotificationsRequest", "com.amazonaws.services.glacier.model.SetVaultNotificationsRequest");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pearson.eidetic.driver.threads.rds.subthreads.RDSSnapshotDBClusterTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Regions regions0 = Regions.EU_WEST_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<DBCluster> arrayList0 = new ArrayList<DBCluster>();
      RDSSnapshotDBClusterTime rDSSnapshotDBClusterTime0 = new RDSSnapshotDBClusterTime("F", "F", "", "F", integer0, integer0, region0, arrayList0);
      // Undeclared exception!
      try { 
        rDSSnapshotDBClusterTime0.connect(region0, "F", "");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.amazonaws.ClientConfiguration
         //
         verifyException("com.pearson.eidetic.driver.threads.rds.subthreads.RDSSnapshotDBClusterTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(1734);
      Regions regions0 = Regions.US_WEST_1;
      Region region0 = Region.getRegion(regions0);
      RDSSnapshotDBClusterTime rDSSnapshotDBClusterTime0 = new RDSSnapshotDBClusterTime("L_6IRXbfwE'!me2", "com.pearson.eidetic.driver.threads.rds.subthreads.RDSSnapshotDBClusterTime", "L_6IRXbfwE'!me2", (String) null, integer0, integer0, region0, (ArrayList<DBCluster>) null);
      // Undeclared exception!
      try { 
        rDSSnapshotDBClusterTime0.connect(region0, "", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Secret key cannot be null.
         //
         verifyException("com.amazonaws.auth.BasicAWSCredentials", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer((-1556));
      Regions regions0 = Regions.SA_EAST_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<DBCluster> arrayList0 = new ArrayList<DBCluster>();
      RDSSnapshotDBClusterTime rDSSnapshotDBClusterTime0 = new RDSSnapshotDBClusterTime("Z|@/+ UjZ8", "Z|@/+ UjZ8", "Z|@/+ UjZ8", "Z|@/+ UjZ8", integer0, integer0, region0, arrayList0);
      boolean boolean0 = rDSSnapshotDBClusterTime0.snapshotDeletion((AmazonRDSClient) null, (DBCluster) null, "NXY7.a>4Y", integer0);
      assertFalse(boolean0);
      assertFalse(rDSSnapshotDBClusterTime0.isFinished());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(789);
      ArrayList<DBCluster> arrayList0 = new ArrayList<DBCluster>();
      RDSSnapshotDBClusterTime rDSSnapshotDBClusterTime0 = new RDSSnapshotDBClusterTime("com.amazonaws.services.identitymanagement.model.DeleteUserRequest", (String) null, (String) null, (String) null, integer0, integer0, (Region) null, arrayList0);
      DBCluster dBCluster0 = new DBCluster();
      boolean boolean0 = rDSSnapshotDBClusterTime0.snapshotDeletion((AmazonRDSClient) null, dBCluster0, "ObjectId: ", (Integer) null);
      assertFalse(rDSSnapshotDBClusterTime0.isFinished());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer((-1556));
      Regions regions0 = Regions.SA_EAST_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<DBCluster> arrayList0 = new ArrayList<DBCluster>();
      RDSSnapshotDBClusterTime rDSSnapshotDBClusterTime0 = new RDSSnapshotDBClusterTime("Z|@/+ UjZ8", "Z|@/+ UjZ8", "Z|@/+ UjZ8", "Z|@/+ UjZ8", integer0, integer0, region0, arrayList0);
      boolean boolean0 = rDSSnapshotDBClusterTime0.snapshotCreation((AmazonRDSClient) null, (DBCluster) null, "_K{m*UQt%pZ", (Date) null);
      assertFalse(boolean0);
      assertFalse(rDSSnapshotDBClusterTime0.isFinished());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer((-2662));
      Regions regions0 = Regions.GovCloud;
      Region region0 = Region.getRegion(regions0);
      ArrayList<DBCluster> arrayList0 = new ArrayList<DBCluster>();
      RDSSnapshotDBClusterTime rDSSnapshotDBClusterTime0 = new RDSSnapshotDBClusterTime("", "", "", "", integer0, integer0, region0, arrayList0);
      JSONObject jSONObject0 = new JSONObject();
      DBCluster dBCluster0 = new DBCluster();
      rDSSnapshotDBClusterTime0.getKeep(jSONObject0, dBCluster0);
      assertFalse(rDSSnapshotDBClusterTime0.isFinished());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer((-1556));
      Regions regions0 = Regions.SA_EAST_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<DBCluster> arrayList0 = new ArrayList<DBCluster>();
      RDSSnapshotDBClusterTime rDSSnapshotDBClusterTime0 = new RDSSnapshotDBClusterTime("Z|@/+ UjZ8", "Z|@/+ UjZ8", "Z|@/+ UjZ8", "Z|@/+ UjZ8", integer0, integer0, region0, arrayList0);
      rDSSnapshotDBClusterTime0.getKeep((JSONObject) null, (DBCluster) null);
      assertFalse(rDSSnapshotDBClusterTime0.isFinished());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = ApplicationConfiguration.getallSnapshotCleanKeepDays();
      Regions regions0 = Regions.US_EAST_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<DBCluster> arrayList0 = new ArrayList<DBCluster>();
      RDSSnapshotDBClusterTime rDSSnapshotDBClusterTime0 = new RDSSnapshotDBClusterTime((String) null, (String) null, (String) null, (String) null, (Integer) null, integer0, region0, arrayList0);
      JSONObject jSONObject0 = new JSONObject();
      rDSSnapshotDBClusterTime0.getKeep(jSONObject0, (DBCluster) null);
      assertFalse(rDSSnapshotDBClusterTime0.isFinished());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer((-1556));
      Regions regions0 = Regions.SA_EAST_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<DBCluster> arrayList0 = new ArrayList<DBCluster>();
      RDSSnapshotDBClusterTime rDSSnapshotDBClusterTime0 = new RDSSnapshotDBClusterTime("Z|@/+ UjZ8", "Z|@/+ UjZ8", "Z|@/+ UjZ8", "Z|@/+ UjZ8", integer0, integer0, region0, arrayList0);
      rDSSnapshotDBClusterTime0.getPeriod((JSONObject) null, (DBCluster) null);
      assertFalse(rDSSnapshotDBClusterTime0.isFinished());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer(124);
      ArrayList<DBCluster> arrayList0 = new ArrayList<DBCluster>();
      RDSSnapshotDBClusterTime rDSSnapshotDBClusterTime0 = new RDSSnapshotDBClusterTime("\",Event=\"Error\", Error=\"error creating snapshot from dbCluster\", DBCluster_Identifier=\"", "\",Event=\"Error\", Error=\"error creating snapshot from dbCluster\", DBCluster_Identifier=\"", "", "Retain", integer0, integer0, (Region) null, arrayList0);
      JSONObject jSONObject0 = new JSONObject();
      // Undeclared exception!
      try { 
        rDSSnapshotDBClusterTime0.getPeriod(jSONObject0, (DBCluster) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pearson.eidetic.driver.threads.rds.subthreads.RDSSnapshotDBClusterTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer((-1556));
      Regions regions0 = Regions.SA_EAST_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<DBCluster> arrayList0 = new ArrayList<DBCluster>();
      RDSSnapshotDBClusterTime rDSSnapshotDBClusterTime0 = new RDSSnapshotDBClusterTime("Z|@/+ UjZ8", "Z|@/+ UjZ8", "Z|@/+ UjZ8", "Z|@/+ UjZ8", integer0, integer0, region0, arrayList0);
      rDSSnapshotDBClusterTime0.getIntTagValue((AmazonRDSClient) null, (DBCluster) null);
      assertFalse(rDSSnapshotDBClusterTime0.isFinished());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = ApplicationConfiguration.getSyncServerHttpListenerPort();
      Regions regions0 = Regions.US_WEST_1;
      Region region0 = Region.getRegion(regions0);
      RDSSnapshotDBClusterTime rDSSnapshotDBClusterTime0 = new RDSSnapshotDBClusterTime("t'e>/FmRT", "kgbF~(%Bl", "yxB.E", "t'e>/FmRT", (Integer) null, integer0, region0, (ArrayList<DBCluster>) null);
      DBCluster dBCluster0 = new DBCluster();
      // Undeclared exception!
      try { 
        rDSSnapshotDBClusterTime0.getIntTagValue((AmazonRDSClient) null, dBCluster0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pearson.eidetic.driver.threads.rds.subthreads.RDSSnapshotDBClusterTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = new Integer((-1556));
      Regions regions0 = Regions.SA_EAST_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<DBCluster> arrayList0 = new ArrayList<DBCluster>();
      RDSSnapshotDBClusterTime rDSSnapshotDBClusterTime0 = new RDSSnapshotDBClusterTime("Z|@/+ UjZ8", "Z|@/+ UjZ8", "Z|@/+ UjZ8", "Z|@/+ UjZ8", integer0, integer0, region0, arrayList0);
      boolean boolean0 = rDSSnapshotDBClusterTime0.isFinished();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Regions regions0 = Regions.AP_SOUTHEAST_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<DBCluster> arrayList0 = new ArrayList<DBCluster>();
      RDSSnapshotDBClusterTime rDSSnapshotDBClusterTime0 = new RDSSnapshotDBClusterTime((String) null, "b6 <i{\"", (String) null, "b6 <i{\"", integer0, integer0, region0, arrayList0);
      // Undeclared exception!
      try { 
        rDSSnapshotDBClusterTime0.run();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Access key cannot be null.
         //
         verifyException("com.amazonaws.auth.BasicAWSCredentials", e);
      }
  }
}
