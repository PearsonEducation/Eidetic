/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 04 20:45:16 GMT 2016
 */

package com.pearson.eidetic.driver.threads;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.amazonaws.regions.Region;
import com.amazonaws.services.ec2.AmazonEC2Client;
import com.amazonaws.services.ec2.model.Tag;
import com.amazonaws.services.ec2.model.Volume;
import com.pearson.eidetic.aws.AwsAccount;
import com.pearson.eidetic.driver.threads.MonitorSnapshotVolumeTime;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.json.simple.JSONObject;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class MonitorSnapshotVolumeTime_ESTest extends MonitorSnapshotVolumeTime_ESTest_scaffolding {

  @Test
  public void test00()  throws Throwable  {
      MonitorSnapshotVolumeTime monitorSnapshotVolumeTime0 = new MonitorSnapshotVolumeTime((AwsAccount) null);
      Volume volume0 = new Volume();
      Tag[] tagArray0 = new Tag[7];
      Tag tag0 = new Tag("cYnt");
      tagArray0[0] = tag0;
      tagArray0[1] = tag0;
      Tag tag1 = new Tag("cYnt", "cYnt");
      tagArray0[2] = tag1;
      tag1.withKey("eidetic");
      volume0.withTags(tagArray0);
      String string0 = monitorSnapshotVolumeTime0.getIntTagValue(volume0);
      assertEquals("cYnt", string0);
  }

  @Test
  public void test01()  throws Throwable  {
      MonitorSnapshotVolumeTime monitorSnapshotVolumeTime0 = new MonitorSnapshotVolumeTime((AwsAccount) null);
      // Undeclared exception!
      try { 
        monitorSnapshotVolumeTime0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.pearson.eidetic.driver.threads.MonitorSnapshotVolumeTime", e);
      }
  }

  @Test
  public void test02()  throws Throwable  {
      MonitorSnapshotVolumeTime monitorSnapshotVolumeTime0 = new MonitorSnapshotVolumeTime((AwsAccount) null);
      // Undeclared exception!
      try { 
        monitorSnapshotVolumeTime0.connect((Region) null, "statusMessage", "statusMessage");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.pearson.eidetic.driver.threads.MonitorSnapshotVolumeTime", e);
      }
  }

  @Test
  public void test03()  throws Throwable  {
      MonitorSnapshotVolumeTime monitorSnapshotVolumeTime0 = new MonitorSnapshotVolumeTime((AwsAccount) null);
      Volume volume0 = new Volume();
      boolean boolean0 = monitorSnapshotVolumeTime0.snapshotDecision((AmazonEC2Client) null, volume0, (String) null);
      assertFalse(boolean0);
  }

  @Test
  public void test04()  throws Throwable  {
      MonitorSnapshotVolumeTime monitorSnapshotVolumeTime0 = new MonitorSnapshotVolumeTime((AwsAccount) null);
      JSONObject jSONObject0 = new JSONObject();
      jSONObject0.put("CreateSnapshot", "CreateSnapshot");
      Volume volume0 = new Volume();
      // Undeclared exception!
      try { 
        monitorSnapshotVolumeTime0.getKeep(jSONObject0, volume0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.json.simple.JSONObject
         //
         assertThrownBy("com.pearson.eidetic.driver.threads.MonitorSnapshotVolumeTime", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      MonitorSnapshotVolumeTime monitorSnapshotVolumeTime0 = new MonitorSnapshotVolumeTime((AwsAccount) null);
      JSONObject jSONObject0 = new JSONObject();
      Integer integer0 = monitorSnapshotVolumeTime0.getKeep(jSONObject0, (Volume) null);
      assertNull(integer0);
  }

  @Test
  public void test06()  throws Throwable  {
      MonitorSnapshotVolumeTime monitorSnapshotVolumeTime0 = new MonitorSnapshotVolumeTime((AwsAccount) null);
      JSONObject jSONObject0 = new JSONObject();
      Volume volume0 = new Volume();
      Integer integer0 = monitorSnapshotVolumeTime0.getKeep(jSONObject0, volume0);
      assertNull(integer0);
  }

  @Test
  public void test07()  throws Throwable  {
      MonitorSnapshotVolumeTime monitorSnapshotVolumeTime0 = new MonitorSnapshotVolumeTime((AwsAccount) null);
      Volume volume0 = new Volume();
      Integer integer0 = monitorSnapshotVolumeTime0.getKeep((JSONObject) null, volume0);
      assertNull(integer0);
  }

  @Test
  public void test08()  throws Throwable  {
      MonitorSnapshotVolumeTime monitorSnapshotVolumeTime0 = new MonitorSnapshotVolumeTime((AwsAccount) null);
      Volume volume0 = new Volume();
      String string0 = monitorSnapshotVolumeTime0.getRunAt((JSONObject) null, volume0);
      assertNull(string0);
  }

  @Test
  public void test09()  throws Throwable  {
      MonitorSnapshotVolumeTime monitorSnapshotVolumeTime0 = new MonitorSnapshotVolumeTime((AwsAccount) null);
      JSONObject jSONObject0 = new JSONObject();
      Volume volume0 = new Volume();
      // Undeclared exception!
      try { 
        monitorSnapshotVolumeTime0.getRunAt(jSONObject0, volume0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.pearson.eidetic.driver.threads.MonitorSnapshotVolumeTime", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      MonitorSnapshotVolumeTime monitorSnapshotVolumeTime0 = new MonitorSnapshotVolumeTime((AwsAccount) null);
      Volume volume0 = new Volume();
      String string0 = monitorSnapshotVolumeTime0.getPeriod((JSONObject) null, volume0);
      assertNull(string0);
  }

  @Test
  public void test11()  throws Throwable  {
      MonitorSnapshotVolumeTime monitorSnapshotVolumeTime0 = new MonitorSnapshotVolumeTime((AwsAccount) null);
      JSONObject jSONObject0 = new JSONObject();
      // Undeclared exception!
      try { 
        monitorSnapshotVolumeTime0.getPeriod(jSONObject0, (Volume) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.pearson.eidetic.driver.threads.MonitorSnapshotVolumeTime", e);
      }
  }

  @Test
  public void test12()  throws Throwable  {
      MonitorSnapshotVolumeTime monitorSnapshotVolumeTime0 = new MonitorSnapshotVolumeTime((AwsAccount) null);
      Volume volume0 = new Volume();
      Tag[] tagArray0 = new Tag[7];
      Tag tag0 = new Tag("cYnt");
      tagArray0[0] = tag0;
      tagArray0[1] = tag0;
      tagArray0[1].withKey("eidetic");
      volume0.withTags(tagArray0);
      String string0 = monitorSnapshotVolumeTime0.getIntTagValue(volume0);
      assertNull(string0);
  }

  @Test
  public void test13()  throws Throwable  {
      MonitorSnapshotVolumeTime monitorSnapshotVolumeTime0 = new MonitorSnapshotVolumeTime((AwsAccount) null);
      Volume volume0 = new Volume();
      Tag[] tagArray0 = new Tag[7];
      Tag tag0 = new Tag("cYnt");
      tagArray0[0] = tag0;
      volume0.withTags(tagArray0);
      // Undeclared exception!
      try { 
        monitorSnapshotVolumeTime0.getIntTagValue(volume0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.pearson.eidetic.driver.threads.MonitorSnapshotVolumeTime", e);
      }
  }

  @Test
  public void test14()  throws Throwable  {
      MonitorSnapshotVolumeTime monitorSnapshotVolumeTime0 = new MonitorSnapshotVolumeTime((AwsAccount) null);
      String string0 = monitorSnapshotVolumeTime0.getIntTagValue((Volume) null);
      assertNull(string0);
  }

  @Test
  public void test15()  throws Throwable  {
      MonitorSnapshotVolumeTime monitorSnapshotVolumeTime0 = new MonitorSnapshotVolumeTime((AwsAccount) null);
      Volume volume0 = new Volume();
      String string0 = monitorSnapshotVolumeTime0.getIntTagValue(volume0);
      assertNull(string0);
  }
}
