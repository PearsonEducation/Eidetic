/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 04 21:21:59 GMT 2016
 */

package com.pearson.eidetic.driver.threads.subthreads;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.amazonaws.auth.AWSCredentialsProvider;
import com.amazonaws.auth.ClasspathPropertiesFileCredentialsProvider;
import com.amazonaws.auth.STSAssumeRoleSessionCredentialsProvider;
import com.amazonaws.regions.Regions;
import com.amazonaws.services.ec2.AmazonEC2Client;
import com.amazonaws.services.ec2.model.Volume;
import com.amazonaws.services.ec2.model.VolumeAttachment;
import com.amazonaws.services.s3.model.Region;
import com.pearson.eidetic.driver.threads.subthreads.SnapshotVolumeSync;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SnapshotVolumeSync_ESTest extends SnapshotVolumeSync_ESTest_scaffolding {

  @Test
  public void test0()  throws Throwable  {
      Integer integer0 = new Integer((-393));
      Integer integer1 = new Integer((-1914288104));
      Region region0 = Region.AP_Tokyo;
      com.amazonaws.regions.Region region1 = region0.toAWSRegion();
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      Boolean boolean0 = Boolean.TRUE;
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("com.amazonaws.services.directconnect.model.DescribeConnectionsOnInterconnectRequest", "com.amazonaws.services.directconnect.model.DescribeConnectionsOnInterconnectRequest", "com.amazonaws.services.directconnect.model.DescribeConnectionsOnInterconnectRequest", integer0, integer1, region1, arrayList0, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Region region0 = Region.US_West_2;
      com.amazonaws.regions.Region region1 = region0.toAWSRegion();
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      Boolean boolean0 = Boolean.TRUE;
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync(">GBL{ ,HSe`", "sync_snapshot", "e#t]By3hA", integer0, integer0, region1, arrayList0, boolean0);
      ClasspathPropertiesFileCredentialsProvider classpathPropertiesFileCredentialsProvider0 = new ClasspathPropertiesFileCredentialsProvider("U");
      STSAssumeRoleSessionCredentialsProvider sTSAssumeRoleSessionCredentialsProvider0 = new STSAssumeRoleSessionCredentialsProvider((AWSCredentialsProvider) classpathPropertiesFileCredentialsProvider0, "sync_snapshot", ">GBL{ ,HSe`");
      AmazonEC2Client amazonEC2Client0 = new AmazonEC2Client((AWSCredentialsProvider) sTSAssumeRoleSessionCredentialsProvider0);
      Volume volume0 = new Volume();
      VolumeAttachment[] volumeAttachmentArray0 = new VolumeAttachment[6];
      VolumeAttachment volumeAttachment0 = new VolumeAttachment();
      volumeAttachmentArray0[0] = volumeAttachment0;
      volume0.withAttachments(volumeAttachmentArray0);
      MockDate mockDate0 = new MockDate(0, 0, 0, 0, 0);
      snapshotVolumeSync0.snapshotCreation(amazonEC2Client0, volume0, mockDate0);
  }

  @Test
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer(1);
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("]5)z", "", "]5)z", integer0, integer0, (com.amazonaws.regions.Region) null, arrayList0, (Boolean) null);
      // Undeclared exception!
      try { 
        snapshotVolumeSync0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.pearson.eidetic.driver.threads.subthreads.SnapshotVolumeSync", e);
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Region region0 = Region.US_GovCloud;
      com.amazonaws.regions.Region region1 = region0.toAWSRegion();
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      Boolean boolean0 = Boolean.valueOf("'nu\"");
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("'nu\"", (String) null, "none", integer0, integer0, region1, arrayList0, boolean0);
      // Undeclared exception!
      try { 
        snapshotVolumeSync0.run();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Secret key cannot be null.
         //
         assertThrownBy("com.amazonaws.auth.BasicAWSCredentials", e);
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Integer integer0 = new Integer((-550));
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("SyncSnapshot", "com.amazonaws.services.ec2.model.DeleteKeyPairRequest", "xD85i<meR!1#ZSYA{", integer0, integer0, (com.amazonaws.regions.Region) null, arrayList0, (Boolean) null);
      // Undeclared exception!
      try { 
        snapshotVolumeSync0.connect((com.amazonaws.regions.Region) null, (String) null, "'LQ.%!?ow!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.pearson.eidetic.driver.threads.subthreads.SnapshotVolumeSync", e);
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Region region0 = Region.AP_Sydney;
      com.amazonaws.regions.Region region1 = region0.toAWSRegion();
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      Boolean boolean0 = new Boolean(true);
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("ec2.", "%n +dI+}w[8qyvl'qh0", "%n +dI+}w[8qyvl'qh0", (Integer) null, (Integer) null, region1, arrayList0, boolean0);
      // Undeclared exception!
      try { 
        snapshotVolumeSync0.connect(region1, "MultiAZ: ", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Secret key cannot be null.
         //
         assertThrownBy("com.amazonaws.auth.BasicAWSCredentials", e);
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Regions regions0 = Regions.AP_SOUTHEAST_2;
      com.amazonaws.regions.Region region0 = com.amazonaws.regions.Region.getRegion(regions0);
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("r@~X%Y.W>BeZ-", ".amazonaws.com", "r@~X%Y.W>BeZ-", integer0, integer0, region0, arrayList0, (Boolean) null);
      AmazonEC2Client amazonEC2Client0 = snapshotVolumeSync0.connect(region0, "\",Event=Error, Error=\"Malformed Eidetic Tag\", Volume_id=\"", "<^g`p|7P");
      boolean boolean0 = snapshotVolumeSync0.snapshotDeletion(amazonEC2Client0, (Volume) null, integer0);
      assertFalse(boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      Integer integer0 = new Integer((-864));
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("sync_snapshot ", "sync_snapshot ", "ISeP", integer0, integer0, (com.amazonaws.regions.Region) null, arrayList0, (Boolean) null);
      AmazonEC2Client amazonEC2Client0 = new AmazonEC2Client();
      Volume volume0 = new Volume();
      boolean boolean0 = snapshotVolumeSync0.snapshotDeletion(amazonEC2Client0, volume0, integer0);
      assertFalse(snapshotVolumeSync0.isFinished());
      assertTrue(boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      Integer integer0 = new Integer((-393));
      Region region0 = Region.AP_Tokyo;
      com.amazonaws.regions.Region region1 = region0.toAWSRegion();
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      Boolean boolean0 = Boolean.TRUE;
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("com.amazonaws.services.directconnect.model.DescribeConnectionsOnInterconnectRequest", "com.amazonaws.services.directconnect.model.DescribeConnectionsOnInterconnectRequest", "com.amazonaws.services.directconnect.model.DescribeConnectionsOnInterconnectRequest", integer0, integer0, region1, arrayList0, boolean0);
      Volume volume0 = new Volume();
      boolean boolean1 = snapshotVolumeSync0.snapshotDeletion((AmazonEC2Client) null, volume0, integer0);
      assertFalse(boolean1);
      assertFalse(snapshotVolumeSync0.isFinished());
  }
}
