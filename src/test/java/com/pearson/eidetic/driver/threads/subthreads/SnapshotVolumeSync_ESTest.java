/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 28 17:02:41 GMT 2017
 */

package com.pearson.eidetic.driver.threads.subthreads;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.amazonaws.regions.Region;
import com.amazonaws.regions.Regions;
import com.amazonaws.services.ec2.AmazonEC2Client;
import com.amazonaws.services.ec2.model.Tag;
import com.amazonaws.services.ec2.model.Volume;
import com.pearson.eidetic.driver.threads.subthreads.SnapshotVolumeSync;
import com.pearson.eidetic.globals.ApplicationConfiguration;
import java.util.ArrayList;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.json.simple.JSONObject;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SnapshotVolumeSync_ESTest extends SnapshotVolumeSync_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer(1556);
      Regions regions0 = Regions.US_WEST_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      Boolean boolean0 = new Boolean(true);
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("", "com.pearson.eidetic.driver.threads.subthreads.SnapshotVolumeSync", (String) null, integer0, integer0, region0, arrayList0, boolean0);
      // Undeclared exception!
      try { 
        snapshotVolumeSync0.run();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.amazonaws.ClientConfiguration
         //
         verifyException("com.pearson.eidetic.driver.threads.subthreads.SnapshotVolumeSync", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer(204);
      Regions regions0 = Regions.AP_SOUTHEAST_2;
      Region region0 = Region.getRegion(regions0);
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync((String) null, "hhvSd{/_sn{", (String) null, integer0, integer0, region0, arrayList0, (Boolean) null);
      // Undeclared exception!
      try { 
        snapshotVolumeSync0.run();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Access key cannot be null.
         //
         verifyException("com.amazonaws.auth.BasicAWSCredentials", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Regions regions0 = Regions.EU_WEST_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("RegistrantContact: ", "RegistrantContact: ", "RegistrantContact: ", integer0, integer0, region0, arrayList0, (Boolean) null);
      // Undeclared exception!
      try { 
        snapshotVolumeSync0.connect(region0, "", "com.amazonaws.services.ec2.model.MonitorInstancesRequest");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.amazonaws.ClientConfiguration
         //
         verifyException("com.pearson.eidetic.driver.threads.subthreads.SnapshotVolumeSync", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer(1738);
      Regions regions0 = Regions.AP_NORTHEAST_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      Boolean boolean0 = new Boolean("SelectExpression: ");
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("Zgu6L]KFXcSI#B", "\",Event=\"Error\", Error=\"error deleting snapshot\", Snapshot_id=\"", "\",Event=\"Error\", Error=\"error deleting snapshot\", Snapshot_id=\"", integer0, integer0, region0, arrayList0, boolean0);
      // Undeclared exception!
      try { 
        snapshotVolumeSync0.connect(region0, (String) null, "kM;5");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Access key cannot be null.
         //
         verifyException("com.amazonaws.auth.BasicAWSCredentials", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer(0);
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("", "", (String) null, integer0, integer0, (Region) null, arrayList0, (Boolean) null);
      // Undeclared exception!
      try { 
        snapshotVolumeSync0.connect((Region) null, "", "$L9AD");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pearson.eidetic.driver.threads.subthreads.SnapshotVolumeSync", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Regions regions0 = Regions.SA_EAST_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("\", stacktrace=\"", "2iVV*+0o1P)T:0b'\"", "s3Object passed inconsistent with the instruction file being created", (Integer) null, (Integer) null, region0, arrayList0, (Boolean) null);
      Volume volume0 = new Volume();
      Integer integer0 = new Integer((-180));
      boolean boolean0 = snapshotVolumeSync0.snapshotDeletion((AmazonEC2Client) null, volume0, integer0);
      assertFalse(snapshotVolumeSync0.isFinished());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = ApplicationConfiguration.geteideticCleanKeepDays();
      Regions regions0 = Regions.CN_NORTH_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      Boolean boolean0 = Boolean.valueOf(true);
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("?` DD]O)NeKU", "eU)K", "", (Integer) null, integer0, region0, arrayList0, boolean0);
      Volume volume0 = new Volume();
      boolean boolean1 = snapshotVolumeSync0.snapshotDeletion((AmazonEC2Client) null, volume0, (Integer) null);
      assertFalse(boolean1);
      assertFalse(snapshotVolumeSync0.isFinished());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(1738);
      Regions regions0 = Regions.AP_NORTHEAST_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      Boolean boolean0 = new Boolean("SelectExpression: ");
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("Zgu6L]KFXcSI#B", "\",Event=\"Error\", Error=\"error deleting snapshot\", Snapshot_id=\"", "\",Event=\"Error\", Error=\"error deleting snapshot\", Snapshot_id=\"", integer0, integer0, region0, arrayList0, boolean0);
      Volume volume0 = new Volume();
      boolean boolean1 = snapshotVolumeSync0.snapshotCreation((AmazonEC2Client) null, volume0, (Date) null);
      assertFalse(boolean1);
      assertFalse(snapshotVolumeSync0.isFinished());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = Integer.getInteger((String) null, 900000);
      Regions regions0 = Regions.US_EAST_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("/R</\"<r. F#", (String) null, "NewServerCertificateName: ", integer0, integer0, region0, arrayList0, (Boolean) null);
      JSONObject jSONObject0 = new JSONObject();
      snapshotVolumeSync0.getKeep(jSONObject0, (Volume) null);
      assertFalse(snapshotVolumeSync0.isFinished());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Regions regions0 = Regions.SA_EAST_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("\", stacktrace=\"", "2iVV*+0o1P)T:0b'\"", "s3Object passed inconsistent with the instruction file being created", (Integer) null, (Integer) null, region0, arrayList0, (Boolean) null);
      Volume volume0 = new Volume();
      snapshotVolumeSync0.getKeep((JSONObject) null, volume0);
      assertFalse(snapshotVolumeSync0.isFinished());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = ApplicationConfiguration.geteideticCleanKeepDays();
      Regions regions0 = Regions.CN_NORTH_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      Boolean boolean0 = Boolean.valueOf(true);
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("?` DD]O)NeKU", "eU)K", "", (Integer) null, integer0, region0, arrayList0, boolean0);
      JSONObject jSONObject0 = new JSONObject();
      Volume volume0 = new Volume();
      snapshotVolumeSync0.getKeep(jSONObject0, volume0);
      assertFalse(snapshotVolumeSync0.isFinished());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer((-309));
      Regions regions0 = Regions.US_WEST_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      Boolean boolean0 = new Boolean(true);
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("", "", "", integer0, integer0, region0, arrayList0, boolean0);
      Volume volume0 = new Volume();
      Tag[] tagArray0 = new Tag[8];
      Tag tag0 = new Tag("", "");
      tagArray0[0] = tag0;
      volume0.withTags(tagArray0);
      // Undeclared exception!
      try { 
        snapshotVolumeSync0.getIntTagValue(volume0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pearson.eidetic.driver.threads.subthreads.SnapshotVolumeSync", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = Integer.getInteger((String) null, 900000);
      Regions regions0 = Regions.US_EAST_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("/R</\"<r. F#", (String) null, "NewServerCertificateName: ", integer0, integer0, region0, arrayList0, (Boolean) null);
      snapshotVolumeSync0.getIntTagValue((Volume) null);
      assertFalse(snapshotVolumeSync0.isFinished());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer((-309));
      Regions regions0 = Regions.US_WEST_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      Boolean boolean0 = new Boolean(true);
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("", "", "", integer0, integer0, region0, arrayList0, boolean0);
      Volume volume0 = new Volume();
      snapshotVolumeSync0.getIntTagValue(volume0);
      assertFalse(snapshotVolumeSync0.isFinished());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = new Integer((-309));
      Regions regions0 = Regions.US_WEST_1;
      Region region0 = Region.getRegion(regions0);
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      Boolean boolean0 = new Boolean(true);
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("", "", "", integer0, integer0, region0, arrayList0, boolean0);
      boolean boolean1 = snapshotVolumeSync0.isFinished();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer((-1941));
      ArrayList<Volume> arrayList0 = new ArrayList<Volume>();
      Boolean boolean0 = new Boolean("\"");
      SnapshotVolumeSync snapshotVolumeSync0 = new SnapshotVolumeSync("|W`v~[gBJ90", "|W`v~[gBJ90", "\"$J9fk'h&>e@D<SizD;", integer0, integer0, (Region) null, arrayList0, boolean0);
      // Undeclared exception!
      try { 
        snapshotVolumeSync0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pearson.eidetic.driver.threads.subthreads.SnapshotVolumeSync", e);
      }
  }
}
