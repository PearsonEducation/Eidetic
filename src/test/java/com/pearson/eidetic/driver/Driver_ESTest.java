/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 04 21:16:26 GMT 2016
 */

package com.pearson.eidetic.driver;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.pearson.eidetic.driver.Driver;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Driver_ESTest extends Driver_ESTest_scaffolding {

  @Test
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/Users/uwalkj6/Documents/NetBeansProjects/eidetic/logback_config.xml");
          byte[] byteArray0 = new byte[8];
          FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
          String[] stringArray0 = new String[11];
          // Undeclared exception!
          try { 
            Driver.main(stringArray0);
            fail("Expecting exception: System.SystemExitException");
          
          } catch(System.SystemExitException e) {
             //
             // no message in exception (getMessage() returned null)
             //
             assertThrownBy("org.evosuite.runtime.System", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test
  public void test1()  throws Throwable  {
      boolean boolean0 = Driver.initializeApplication();
      assertFalse(boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      Driver.startAccountSnapshotCreationTimeThreads();
  }

  @Test
  public void test3()  throws Throwable  {
      Driver.startAccountSnapshotCleaningThreads();
  }

  @Test
  public void test4()  throws Throwable  {
      Driver.startAccountSnapshotCheckerThreads();
  }

  @Test
  public void test5()  throws Throwable  {
      Driver.startAccountCopySnapshotThreads();
  }

  @Test
  public void test6()  throws Throwable  {
      Driver.startAccountSnapshotThreads();
  }

  @Test
  public void test7()  throws Throwable  {
      boolean boolean0 = Driver.readAndSetLogbackConfiguration("d,^f;A", "d,^f;A");
      assertFalse(boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      Driver driver0 = new Driver();
  }
}
